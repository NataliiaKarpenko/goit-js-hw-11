{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCCAAC,EAAAD,EAAA,S,uCAEOE,ECFJ,W,sBDEUC,I,aAITC,KAAKC,KAAO,KACZD,KAAKE,EAAI,KACTF,KAAKG,SAAW,E,iBAGlBC,IAAA,qB,MAAA,WACE,IAAMC,EAAe,CACnBC,OAAQ,CACNJ,EAAGF,KAAKE,EACRD,KAAMD,KAAKC,KACXE,SAAUH,KAAKG,SACfI,WAAY,QACZC,YAAa,aACbC,YAAY,IAIhB,OAAOC,EAAAC,QAAMC,IACX,GAA+BC,OAA5Bd,EAAWe,UAAU,SAA0BD,OAAnBd,EAAWgB,SAC1CV,E,OCzBH,GCAI,SAASW,EAAcC,GAyB5B,OAxBmBA,EAAUC,KAAI,SAAAC,GAC/B,MAAO,oCAGON,OAFeM,EAAKC,aAAa,sDAELP,OAA5BM,EAAKE,cAAc,WAGbR,OAHsBM,EAAKG,KAAK,wGAMhCT,OAHAM,EAAKI,MAAM,yEAMRV,OAHHM,EAAKK,MAAM,4EAMPX,OAHDM,EAAKM,SAAS,6EAGEZ,OAAfM,EAAKO,UAAU,qD,IAQvBC,KAAK,G,CCzBlB,SAASC,IACd,IAAQC,EAAuBC,SAC5BC,cAAc,YACdC,kBAAkBC,wBAFbC,OAIRC,OAAOC,SAAS,CACdC,IAAkB,EAAbR,EACLS,SAAU,U,CHJZC,EAAAC,EAAA,CADW1C,EACJ,YAAY,4BACnByC,EAAAC,EAAA,CAFW1C,EAEJ,UAAU,sCDGnB,IAAM2C,EAAgBX,SAASC,cAAc,gBACvCW,EAAaZ,SAASC,cAAc,YACpCY,EAAiBb,SAASC,cAAc,cAExCa,EAAa,IAAI9C,E,SAKR+C,I,OAAAA,EAAfN,EAAA5C,EAAA,CAAA4C,EAAAO,GAAAC,MAAA,SAAAC,EAAkCC,G,IAOxBC,EACEC,E,yEAPVF,EAAEG,iBAEFR,EAAW1C,EAAI+C,EAAEI,OAAOC,SAASC,YAAYC,MAC7CZ,EAAW3C,KAAO,E,kBAGO2C,EAAWa,qB,UAA5BP,EAAQQ,EAAAC,KAGW,KAFnBR,EAAWD,EAATC,MAECS,KAAKC,OAAY,C,uBACxBC,EAAAC,OAAOC,QACL,4EAEFf,EAAEI,OAAOY,QACTvB,EAAWwB,UAAY,GACvBvB,EAAewB,UAAUC,IAAI,mB,2BAI3BjB,EAAKkB,UAAY,IACnB1B,EAAewB,UAAUG,OAAO,mBAGlCR,EAAAC,OAAOQ,QAAQ,oBAAmC1D,OAAfsC,EAAKkB,UAAU,aAClD3B,EAAWwB,UAAYlD,EAAcmC,EAAKS,MAC1ChC,IACA,IAAIW,EAAAiC,GAAJ,CAAmB,c,kDAEnBC,QAAQC,IAAGhB,EAAAiB,I,2DA7BkBC,MAAA5E,KAAA6E,U,UAiClBC,I,OAAAA,EAAfvC,EAAA5C,EAAA,CAAA4C,EAAAO,GAAAC,MAAA,SAAAC,EAAkCC,G,IAIxBC,EACEC,E,yEAJVP,EAAW3C,MAAQ,E,kBAGM2C,EAAWa,qB,OAA5BP,EAAQQ,EAAAC,MACRR,EAAWD,EAATC,MACCkB,UAAYzB,EAAWzC,SAAWyC,EAAW3C,MAAQ,IAC5D6D,EAAAC,OAAOgB,QACL,8DAEFpC,EAAewB,UAAUC,IAAI,oBAG/B1B,EAAWsC,mBAAmB,YAAahE,EAAcmC,EAAKS,OAC9DhC,IACA,IAAIW,EAAAiC,GAAJ,CAAmB,cAAcS,U,kDAEjCR,QAAQC,IAAGhB,EAAAiB,I,2DAjBkBC,MAAA5E,KAAA6E,U,CApCjCpC,EAAcyC,iBAAiB,U,SAGGjC,G,OAAnBJ,EAAkB+B,MAAA5E,KAAA6E,U,IAFjClC,EAAeuC,iBAAiB,S,SAmCEjC,G,OAAnB6B,EAAkBF,MAAA5E,KAAA6E,U","sources":["src/js/gallery/smooth-scroll.js","src/js/gallery/pixabay-api-smooth-scroll.js","<<jsx-config-pragma.js>>","src/js/gallery/create-gallery.js","src/js/gallery/handle-window-scroll.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { PixabayAPI } from './pixabay-api-smooth-scroll';\nimport { createGallery } from './create-gallery';\nimport { handleWindowScroll } from './handle-window-scroll';\n\nconst searchFormRef = document.querySelector('.search-form');\nconst galleryRef = document.querySelector('.gallery');\nconst loadMoreBtnRef = document.querySelector('.load-more');\n\nconst pixabayApi = new PixabayAPI();\n\nsearchFormRef.addEventListener('submit', onSearchFormSubmit);\nloadMoreBtnRef.addEventListener('click', onLoadMoreBtnClick);\n\nasync function onSearchFormSubmit(e) {\n  e.preventDefault();\n\n  pixabayApi.q = e.target.elements.searchQuery.value;\n  pixabayApi.page = 1;\n\n  try {\n    const response = await pixabayApi.fetchPhotosByQuery();\n    const { data } = response;\n\n    if (data.hits.length === 0) {\n      Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      e.target.reset();\n      galleryRef.innerHTML = '';\n      loadMoreBtnRef.classList.add('visually-hidden');\n      return;\n    }\n\n    if (data.totalHits > 40) {\n      loadMoreBtnRef.classList.remove('visually-hidden');\n    }\n\n    Notify.success(`Hooray! We found ${data.totalHits} images.`);\n    galleryRef.innerHTML = createGallery(data.hits);\n    handleWindowScroll();\n    new SimpleLightbox('.gallery a');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function onLoadMoreBtnClick(e) {\n  pixabayApi.page += 1;\n\n  try {\n    const response = await pixabayApi.fetchPhotosByQuery();\n    const { data } = response;\n    if (data.totalHits - pixabayApi.per_page * pixabayApi.page <= 0) {\n      Notify.warning(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      loadMoreBtnRef.classList.add('visually-hidden');\n    }\n\n    galleryRef.insertAdjacentHTML('beforeend', createGallery(data.hits));\n    handleWindowScroll();\n    new SimpleLightbox('.gallery a').refresh();\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import axios from 'axios';\n\nexport class PixabayAPI {\n  static BASIC_URL = 'https://pixabay.com/api/';\n  static API_KEY = '33069877-56d6b4be23d42e6d3f03db65c';\n  constructor() {\n    this.page = null;\n    this.q = null;\n    this.per_page = 40;\n  }\n\n  fetchPhotosByQuery() {\n    const searchParams = {\n      params: {\n        q: this.q,\n        page: this.page,\n        per_page: this.per_page,\n        image_type: 'photo',\n        orientation: 'horisontal',\n        safesearch: true,\n      },\n    };\n\n    return axios.get(\n      `${PixabayAPI.BASIC_URL}?key=${PixabayAPI.API_KEY}`,\n      searchParams\n    );\n  }\n}\n",null,"export function createGallery(cardsInfo) {\n  const galleryArr = cardsInfo.map(card => {\n    return `\n  <a class =\"photo-link\" href=\"${card.webformatURL}\">\n    <div class=\"photo-card\">\n      <img src=\"${card.largeImageURL}\" alt=\"${card.tags}\" loading=\"lazy\" />\n      <div class=\"info\">\n        <p class=\"info-item\">\n          <b>Likes</b>${card.likes}\n        </p>\n        <p class=\"info-item\">\n          <b>Views</b>${card.views}\n        </p>\n        <p class=\"info-item\">\n          <b>Comments</b>${card.comments}\n        </p>\n        <p class=\"info-item\">\n          <b>Downloads</b>${card.downloads}\n        </p>\n      </div>\n    </div>\n  </a>\n`;\n  });\n\n  return galleryArr.join('');\n}\n","export function handleWindowScroll() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$bpxeT","parcelRequire","$8MBJY","$c53e7411d2b4d3f7$export$4fcfbd750f3dd343","PixabayAPI","this","page","q","per_page","key","searchParams","params","image_type","orientation","safesearch","$dIxxU","default","get","concat","BASIC_URL","API_KEY","$8ef0c4313a49a3cc$export$dac8b9bf675ebb55","cardsInfo","map","card","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","$1e48cf307473bc60$export$597b6f74b98788c","cardHeight","document","querySelector","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","$parcel$interopDefault","$hKHmD","$2871f8aa64f94775$var$searchFormRef","$2871f8aa64f94775$var$galleryRef","$2871f8aa64f94775$var$loadMoreBtnRef","$2871f8aa64f94775$var$pixabayApi","$2871f8aa64f94775$var$_onSearchFormSubmit","$2TvXO","mark","_callee","e","response","data","preventDefault","target","elements","searchQuery","value","fetchPhotosByQuery","_ctx","sent","hits","length","$h6c0i","Notify","failure","reset","innerHTML","classList","add","totalHits","remove","success","$5IjG7","console","log","t0","apply","arguments","$2871f8aa64f94775$var$_onLoadMoreBtnClick","warning","insertAdjacentHTML","refresh","addEventListener"],"version":3,"file":"smooth-scroll.daf7a903.js.map"}